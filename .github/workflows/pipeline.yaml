name: cicd
on: [push]

env: 
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.5.1"
  # This variable is used in the nginx.conf.template file
  PROXY_PASS_URL: https://app.groundlight.ai

jobs:
  # Run Groundlight SDK tests against the 
  # edge proxy endpoint set in nginx.conf file 
  test-sdk-via-proxy:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up python 
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install poetry 
        uses: snok/install-poetry@v1
        with: 
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true 
          virtualenvs-in-project: true 
          installer-parallel: true 

      - name: Checkout Groundlight SDK 
        uses: actions/checkout@v3
        with:
          repository: groundlight/python-sdk
          path: groundlight-sdk
      - name: Install Groundlight SDK dependencies
        run: |
          cd groundlight-sdk 
          poetry install 

      - name: Prepare NGINX proxy
        run: envsubst < nginx.conf.template > nginx.conf

      - name: Start NGINX proxy
        run: | 
          sudo apt-get update 
          sudo apt-get install -y nginx 
          sudo cp nginx.conf /etc/nginx/
          sudo service nginx start

      - name: Run Groundlight SDK tests against Edge Proxy Endpoint
        env:
          GROUNDLIGHT_ENDPOINT: http://localhost:8080
          GROUNDLIGHT_API_TOKEN: ${{ secrets.GROUNDLIGHT_API_TOKEN }}
        run: |
          cd groundlight-sdk 
          poetry run pytest 

  # Run unit tests 
  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{hashFiles('**/poetry.lock') }}
      - name: Install package
        run: |
          poetry install --no-interaction --no-root
      - name: Run tests
        run: |
          poetry run pytest
