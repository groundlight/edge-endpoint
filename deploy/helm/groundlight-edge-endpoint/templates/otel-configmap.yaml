{{- if or (eq .Values.loggingMode "local-splunk") (eq .Values.loggingMode "cloud-splunk") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: {{ .Values.namespace }}
data:
  otel-config.yaml: |
    receivers:
      # Filelog receiver to read container logs from Kubernetes
      filelog:
        include:
          - /var/log/pods/{{ .Values.namespace }}_*/*/*.log
        exclude:
          # Exclude otel-collector's own logs to prevent loops
          - /var/log/pods/{{ .Values.namespace }}_*/*otel-collector*/*.log
        start_at: end
        include_file_path: true
        include_file_name: false
        operators:
          # Parse Kubernetes log format
          - type: json_parser
            id: parser-cri
            output: extract_metadata_from_filepath
          # Extract Kubernetes metadata from file path
          - type: regex_parser
            id: extract_metadata_from_filepath
            regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
            parse_from: attributes["log.file.path"]
            output: add_source
          # Add source information
          - type: add
            id: add_source
            field: attributes.source
            value: "kubernetes"

    processors:
      # Add Kubernetes attributes using the Kubernetes API
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: KUBE_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.container.name
          labels:
            - tag_name: app
              key: app
            - tag_name: version
              key: version
            - tag_name: component
              key: component
          annotations:
            - tag_name: deployment
              key: deployment.kubernetes.io/revision

      # Add resource attributes
      resource:
        attributes:
          - key: service.name
            value: "edge-endpoint"
            action: upsert
          - key: service.version
            from_attribute: version
            action: insert
          - key: deployment.environment
            value: "edge"
            action: upsert

      # Batch processor for performance
      batch:
        timeout: 1s
        send_batch_size: 1024

    exporters:
      # Splunk HEC exporter
      splunk_hec:
        {{- if eq .Values.loggingMode "local-splunk" }}
        endpoint: "http://splunk:8088/services/collector"
        token: {{ .Values.splunk.local.hecToken | quote }}
        {{- else if eq .Values.loggingMode "cloud-splunk" }}
        endpoint: {{ .Values.splunk.cloud.endpoint | quote }}
        token: {{ .Values.splunk.cloud.token | quote }}
        {{- end }}
        index: {{ .Values.splunk.index | quote }}
        source: {{ .Values.splunk.source | quote }}
        sourcetype: {{ .Values.splunk.sourcetype | quote }}
        disable_compression: false
        timeout: 10s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 120s

      # Debug exporter for troubleshooting (optional)
      debug:
        verbosity: basic

    service:
      pipelines:
        logs:
          receivers: [filelog]
          processors: [k8sattributes, resource, batch]
          exporters: [splunk_hec]
          # Uncomment to enable debug output:
          # exporters: [splunk_hec, debug]
{{- end }}
