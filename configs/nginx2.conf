events {
    worker_connections 16;
}

http {
    server {
        listen 6717;

        location / {
            proxy_pass http://localhost:6718;
            
            # Intercept specific errors from the local app and attempt to use the cloud API.
            error_page 404 422 405 = @try_cloud;
        }

        location @try_cloud {
            # Use auth_request to attempt the cloud API, but also retain the ability to return control.
            auth_request /cloud-subrequest;
            auth_request_set $auth_response $upstream_status;
            
            # If cloud API is successful (i.e., 2xx), return control to local FastAPI.
            if ($auth_response ~ ^2) {
                rewrite ^/.* /post_process break;
                proxy_pass http://localhost:6718;
            }
            
            # For any non-2xx from cloud API or if the if-condition isn't met, this will be executed.
            proxy_pass https://api.groundlight.ai;
        }

        location = /cloud-subrequest {
            internal;
            proxy_pass https://api.groundlight.ai$request_uri;

            # You might need these depending on your setup
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
