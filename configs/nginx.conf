events {
    worker_connections 16;
}

http {
    
    server {
        listen 6717;

        location / {
            proxy_pass http://localhost:6718;

            # If local edge server is not up or can't handle the query arguments, 
            # then fallback to the cloud API server.
            # 422  - Unprocessable Entity
            # 404  - Not Found
            proxy_intercept_errors on;
            error_page 404 422 405 = @fallback;
        }

        location @fallback {
            # Fallback to the cloud API server
            proxy_pass https://api.groundlight.ai;
        }

    }

    #https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/
    server {
        listen 443 ssl; # HTTPS server 
        server_name edge-endpoint-service;

        # If SSL certificate does not exist, then fallback to HTTP
        if (!-f /etc/nginx/ssl/nginx_ed25519.crt) {
            rewrite ^ http://$host$request_uri? permanent;
        }

        # Point to the self-signed certificate and key 
        ssl_certificate /etc/nginx/ssl/nginx_ed25519.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx_ed25519.key;

        # SSL settings. 

        # ssl_protocols: Only newer versions of TLS are allowed.
        # ssl_ciphers: Specifies a list of ciphers that the server is willing to use. 
        #     The given list includes modern, secure ciphers. 
        #     Refer to https://mozilla.github.io/server-side-tls/ssl-config-generator/ for more details.

        # ssl_prefer_server_ciphers: Dictates who gets to choose the cipher for the SSL/TLS connection. 
        #    When set to on, the server's list of ciphers takes priority.
        #    Here it's set to off, allowing client preference but still bound by the server's list.
        # ssl_session_cache: Enables session caching for SSL/TLS, which can improve performance.
        #    By caching the session, repeat handshakes within a short period can be avoided. 
        #    In this configuration, the cache is shared among all workers and has a 10-minute lifespan.


        proxy_ssl_server_name on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        # ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        location / {
            proxy_pass http://localhost:6718;

            # If local edge server is not up or can't handle the query arguments, 
            # then fallback to the cloud API server.
            # 422  - Unprocessable Entity
            # 404  - Not Found
            proxy_intercept_errors on;
            error_page 404 422 405 = @fallback;
        }

        location @fallback {
            # Fallback to the cloud API server
            proxy_pass https://api.groundlight.ai;
        }
    }

}