events {
    worker_connections 16;
}

http {
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name api.groundlight.ai;
        return 301 https://$host$request_uri;
    }
    server {
        listen 6717;

        location / {
            proxy_pass http://localhost:6718;

            # If local edge server is not up or can't handle the query arguments, 
            # then fallback to the cloud API server.
            # 422  - Unprocessable Entity
            # 404  - Not Found
            proxy_intercept_errors on;
            error_page 404 422 405 = @fallback;
        }

        location @fallback {
            # Fallback to the cloud API server
            proxy_pass https://api.groundlight.ai;
        }   

    }

    server {
        listen 443 ssl; # HTTP server 
        server_name api.groundlight.ai;

        # Point to the self-signed certificate and key 
        ssl_certificate ssl/nginx_ed25519.crt;
        ssl_certificate_key ssl/nginx_ed25519.key;

        # Add SSL settings 
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;

        location / {
            proxy_pass http://localhost:6718;

            # If local edge server is not up or can't handle the query arguments, 
            # then fallback to the cloud API server.
            # 422  - Unprocessable Entity
            # 404  - Not Found
            proxy_intercept_errors on;
            error_page 404 422 405 = @fallback;
        }

        location @fallback {
            # Fallback to the cloud API server
            proxy_pass https://api.groundlight.ai;
        }
    }

}